METHOD 1: Recursion

class Solution {
public:
    void solve(TreeNode* root, vector<int>& ans){
        if(root!=NULL){
            ans.push_back(root->val);
            solve(root->left, ans);
            solve(root->right, ans);
        }
    }
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> ans;
        solve(root, ans);
        return ans;
    }
};

T.C. = O(n)
S.C. = O(n)

METHOD 2: Iterative

class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        stack<TreeNode*> st;
        vector<int> ans;
        if(root==NULL) return ans;
        st.push(root);
        while(!st.empty()){
            TreeNode* node =st.top();
            ans.push_back(node->val);
            st.pop();
            if(node->right!=NULL) st.push(node->right);
            if(node->left!=NULL) st.push(node->left);
        }
        return ans;
    }
};

T.C. = O(n)
S.C. = O(n)
